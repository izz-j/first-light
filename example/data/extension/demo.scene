;; -*- mode: common-lisp -*-

(in-package :first-light-example)

(define-scene demo (:enabled t)
  ((@camera
    ((transform :translation/current (vec3 0 0 50))
     (camera :activep t
             :mode :perspective)))
   (@fish
    ((transform :translation/current (vec3 0 -4 0)
                :rotation/incremental (vec3 0 0.03 0)
                :scale/current (vec3 24 24 24))
     (mesh :location "data/mesh/fish.glb")
     (mesh-renderer :shader :texture
                    :texture-location "data/texture/debug.png")))
   (@quad
    ((transform :translation/current (vec3 0 15 0)
                :rotation/incremental (vec3 0.02 0.02 0.02)
                :scale/current (vec3 4 4 4))
     (mesh :location "data/mesh/quad.glb")
     (mesh-renderer :shader :texture
                    :texture-location "data/texture/debug.png")))
   (@sphere
    ((transform :translation/current (vec3 0 -15 0)
                :rotation/incremental (vec3 0.02 0.02 0.02)
                :scale/current (vec3 4 4 4))
     (mesh :location "data/mesh/sphere.glb")
     (mesh-renderer :shader :texture
                    :texture-location "data/texture/debug.png")))

   (@torus
    ((transform :translation/current (vec3 15 0 0)
                :rotation/incremental (vec3 0.02 0.02 0.02)
                :scale/current (vec3 4 4 4))
     (mesh :location "data/mesh/torus.glb")
     (mesh-renderer :shader :texture
                    :texture-location "data/texture/debug.png")))

   (@cone
    ((transform :translation/current (vec3 -15 0 0)
                :rotation/incremental (vec3 0.02 0.02 0.02)
                :scale/current (vec3 4 4 4))
     (mesh :location "data/mesh/cone.glb")
     (mesh-renderer :shader :texture
                    :texture-location "data/texture/debug.png")))))
